[
    {
        "title": "デバイス予約管理",
        "date": "2024.1",
        "participants": "5人チームプロジェクト",
        "main": true,
        "subtitle": "デバイス予約管理システム開発",
        "details": [
          "ユーザーインターフェースの改善（行の色変更、選択された行の強調）",
          "フィルタリング機能およびテキストコピー機能の追加",
          "検索機能の実装",
          "パスワードおよび権限変更時に強制ログアウト処理の実装",
          "情報修正時の遅延を排除し、リアルタイムで情報反映を最適化"
        ],
        "features": [
          "UIの修正およびパフォーマンスの最適化",
          "リアルタイム情報反映のためのパフォーマンス最適化",
          "アプリケーションとウェブページの同時実装"
        ],
        "background": "デバイス予約管理システムは、組織内で機器やデバイスを予約するために使用されます。このシステムは効率的な予約と管理のための機能を提供し、ユーザーの利便性を向上させることを目的としています。",
        "meaning": "このプロジェクトは、デバイス予約システムをより効率的に管理し、ユーザーがリアルタイムで予約情報を反映できるようにすることで、予約管理の効率とユーザー満足度を向上させました。",
        "setup_usage": {
          "install_packages": "FlutterとDartを使用してアプリ開発環境を構築",
          "run_server": "バックエンドで予約情報およびセキュリティ管理機能を処理"
        },
        "url": "https://www.naver.com/",
        "technologies": [
          "Flutter",
          "MongoDB",
          "Android Studio",
          "AWS",
          "Dart",
          "GitLab"
        ],
        "readme": true,
        "images": ["./images/project1/cat1.jpg", "./images/project1/cat3.jpg", "./images/project1/cat4.jpg", "./images/project1/cat5.jpg"],
        "videos": []
      },
      {
        "title": "受付専用アプリの修正",
        "date": "2023.8",
        "participants": "2人チームプロジェクト",
        "main": true,
        "subtitle": "受付専用アプリの機能追加および修正",
        "details": [
          "受付用アプリの音声機能を改善し、訪問目的を音声と通知でお知らせできるように追加",
          "訪問記録をリアルタイムで確認し、管理できる画面を実装",
          "訪問記録を保存し、検索できる機能を追加"
        ],
        "features": [
          "音声機能を改善し、訪問目的を正確かつ効率的に案内",
          "訪問記録をリアルタイムで確認し、データを保存して管理可能"
        ],
        "background": "このプロジェクトは、受付専用アプリの機能を拡張し、音声案内機能を改善し、訪問記録を管理する機能を追加することを目的としています。",
        "meaning": "受付システムをより効率的に管理できるようにサポートし、訪問記録をリアルタイムで管理・保存できるようになったことで、業務の効率性が向上しました。",
        "setup_usage": {
          "install_packages": "XcodeとSwiftを使用してアプリ開発環境を構築",
          "run_server": "バックエンドで訪問記録管理および音声機能を処理"
        },
        "url": "",
        "technologies": [
          "Swift",
          "MySQL",
          "SQLite",
          "Xcode",
          "AWS",
          "Firebase",
          "GitLab"
        ],
        "readme": true,
        "images": [],
        "videos": []
      },
      {
        "title": "社員情報管理アプリのPhase2",
        "date": "2023.8",
        "participants": "3人チームプロジェクト",
        "main": true,
        "subtitle": "組織図と社内共用文書閲覧機能の追加",
        "details": [
          "組織図閲覧機能実装",
          "組織別社員情報閲覧機能と詳細画面追加",
          "社内情報及び共用文書閲覧画面追加 (社内共用文書、教育資料、ライセンス情報など)"
        ],
        "features": [
          "社員組織図をツリー形式で構成",
          "組織別社員情報と詳細情報を効率よく閲覧可能",
          "複数の資料を一画面で閲覧可能"
        ],
        "background": "このプロジェクトは、社員情報管理システムのPhase2の開発に取り組みました。Phase1で構築した基盤をもとに、組織図の閲覧機能と社内共用文書の閲覧機能を追加しました。",
        "meaning": "このプロジェクトにより、社内の組織構造や社員情報、重要な社内資料を一元管理し、より効率的に情報を確認できるようになりました。",
        "setup_usage": {
          "install_packages": "Xcodeを使用してアプリ開発",
          "run_server": "FirebaseとAWSを利用してデータベース接続"
        },
        "url": "",
        "technologies": [
          "Swift",
          "MySQL",
          "SQLite",
          "Linux",
          "Xcode",
          "AWS",
          "Firebase",
          "GitLab"
        ],
        "readme": true,
        "images": [],
        "videos": []
      },      
      {
        "title": "社員情報管理アプリのPhase1",
        "date": "2022.11",
        "participants": "4人チームプロジェクト",
        "main": true,
        "subtitle": "社員情報管理アプリの開発",
        "details": [
          "勤怠メイン画面（一覧、承認申請、カレンダー）実装",
          "勤怠情報登録画面実装",
          "申請画面（休暇、交通費・定期券、その他経費、書類発行）実装",
          "個人情報変更画面実装"
        ],
        "features": [
          "クロスプラットフォーム対応アプリの開発",
          "ユーザー認証機能の実装",
          "勤怠情報登録および管理機能",
          "申請および承認機能の実装"
        ],
        "background": "このプロジェクトは、社員情報を管理するアプリを開発することを目的としています。Flutterを使用して、iOSとAndroid両方のプラットフォームに対応したアプリを開発し、社内業務の効率化を目指しました。",
        "meaning": "社員の勤怠情報と申請を管理するシステムを開発することで、業務効率化と手間の削減を実現しました。Flutterを使用した開発により、二つのプラットフォームで同じコードベースを使用することで、開発時間を短縮することができました。",
        "setup_usage": {
          "install_packages": "Flutter SDKとDartをインストールし、Android Studioでプロジェクトを開きます。",
          "run_server": "バックエンドはAWSで実行され、必要なAPIを実行してデータ同期を行います。"
        },
        "url": "",
        "technologies": [
          "Flutter",
          "Dart",
          "MySQL",
          "SQLite",
          "AWS",
          "Firebase",
          "GitLab"
        ],
        "readme": true,
        "images": [],
        "videos": []
      },      
      {
        "title": "SNSアプリ開発",
        "date": "2018.08",
        "participants": "1人個人プロジェクト",
        "main": true,
        "subtitle": "簡単なSNSアプリで写真・動画共有とチャット機能を提供",
        "details": [
            "ユーザー認証のためのFirebase使用",
          "リアルタイムメッセージ送信と同期機能",
          "写真・動画・テキストの登録機能",
          "いいね機能"
          
        ],
        "features": [
          "Firebase Authenticationを使用したユーザー認証機能の実装",
          "Firebase Realtime Database/Firestoreを利用したリアルタイムメッセージ送信機能の実装"
        ],
        "background": "このアプリは簡単なSNS機能を実装したアプリで、ユーザーが写真や動画をアップロードし、リアルタイムでメッセージをやり取りできるようにしました。また、Firebaseを利用してリアルタイムデータ同期とプッシュ通知機能も実装しました。",
        "meaning": "個人のSNSプラットフォームとして、ユーザーが簡単にコンテンツを共有し、コミュニケーションできる環境を提供することを目指しました。Firebaseの認証機能とリアルタイムデータベースを使用し、安定したユーザー体験を提供できました。",
        "setup_usage": {
          "install_packages": "Android Studioでプロジェクトを開く",
          "run_server": "アプリを実行後、Firebase認証とデータベースとの連携"
        },
        "url": "",
        "technologies": [
          "Java",
          "Firebase",
          "Android Studio",
          "XML"
        ],
        "readme": true,
        "images": [],
        "videos": []
      },
    {
        "title": "(K-Hackathon) ポータブルCPR開発",
        "date": "2018.4",
        "participants": "5人チームプロジェクト",
        "main": true,
        "subtitle": "Arduinoとセンサーを使用したポータブルCPRデバイスの開発",
        "details": [
          "加速度センサーと圧力センサーを利用して適切な心臓圧迫速度を音声で通知する機能を実装",
          "圧力センサーを使用して適切な心臓圧迫圧力を確認し、フィードバックを提供",
          "GPSまたはBLE位置センサーを使用して患者の正確な位置を確認できる機能を実装",
          "位置センサーを通じて取得したデータをアプリに送信し、リアルタイムで正確な位置を確認できる機能を実装"
        ],
        "features": [
          "Arduinoとセンサーを使用した心臓圧迫速度音声案内",
          "圧力センサーによる心臓圧迫圧力確認とフィードバック提供",
          "位置通知機能の実装",
          "ログインおよびログアウト機能の実装"
        ],
        "background": "このプロジェクトは、心臓圧迫を正確に伝えるポータブルCPRデバイスの開発を目指しました。Arduinoとさまざまなセンサーを使用して、ユーザーが適切な心臓圧迫を行えるように、音声で速度を案内する機能を実装しました。",
        "meaning": "このプロジェクトは、緊急時にユーザーが正しい心臓圧迫を行うのを支援する重要な役割を果たします。センサーを使用したリアルタイムのフィードバックを提供し、心臓圧迫の速度と圧力が正確に一致するよう誘導し、位置ベースの通知機能を追加することで、より迅速かつ効率的な応急処置を可能にしました。",
        "setup_usage": {
          "install_packages": "Android Studioを使用してアプリ開発",
          "run_server": "アプリ実行時にログインしてセンサーと連携"
        },
        "url": "",
        "technologies": [
          "Java",
          "Linux",
          "Arduino言語",
          "XML"
        ],
        "readme": true,
        "images": ["./images/project1/cat3.jpg"],
        "videos": []
      },      
    {
      "title": "ミニゲーム",
      "date": "2018.04",
      "participants": "3人チームプロジェクト",
      "main": false,
      "subtitle": "さまざまなゲームを楽しめるミニゲーム集",
      "details": [
        "ユーザーがゲームを開始したり、希望するゲームを選択できるメイン画面",
        "ゲームのルールやプレイ方法を詳しく説明する画面",
        "チェス、シューティングゲーム、ハングマン（単語推測ゲーム）開発"
      ],
      "url": "",
      "technologies": [
        "C++",
        "SFML", 
        "SDL", 
        "Boost.Asio", 
        "Winsock"],
      "readme": true,
      "images": [],
      "videos": [],
      "features": [
        "ソケットを使用したリアルタイムオンラインプレイ",
  "ユーザー間のリアルタイム対戦",
  "ターン制プレイシステム"
      ],
      "background": "このプロジェクトでは、複数のミニゲームを楽しめるプラットフォームを開発することを目指しました。プレイヤーは自分の好きなゲームを選び、リアルタイムで対戦を楽しむことができます。",
  "meaning": "このプロジェクトは、ネットワークを利用したリアルタイム対戦機能を実現し、ゲームの楽しさを倍増させました。ソケット通信を使って、他のプレイヤーと直接対戦できるシステムを構築することにより、ユーザー体験を向上させました。",
      "setup_usage": {
        "install_packages": "npm install",
        "run_server": "npm start"
      }
    },
    {
      "title": "履歴書作成ウェブ",
      "date": "2017.8",
      "participants": "1人個人プロジェクト",
      "main": false,
      "subtitle": "履歴書・自己紹介書を自動生成できるウェブ",
      "details": [
        "履歴書・自己紹介書の作成のウェブ開発",
        "履歴書・自己紹介書の自動生成機能実装"
      ],
      "url": "",    
      "technologies": [
        "php",
        "html",
        "MySQL",
        "Linux(Ubuntu)"
      ],
      "readme": true,
      "images": ["./images/project1/cat3.jpg", "./images/project1/cat4.jpg"],
      "videos": [],
      "features": [
        "履歴書・自己紹介書の自動生成"
      ],
     "background": "このプロジェクトは、履歴書と自己紹介書を自動で生成する機能をウェブ開発で実装することを目的としました。ユーザーが入力したデータを基に、履歴書と自己紹介書のフォーマットに合わせて自動的に作成されます。",
  "meaning": "このプロジェクトでは、ウェブ開発技術を用いて、ユーザーが手間をかけずに履歴書や自己紹介書を簡単に作成できるようにすることができました。特に、自動生成機能を使うことで、書類作成の効率を大幅に向上させることができました。",
      "setup_usage": {
        "install_packages": "composer install",
        "run_server": "php artisan serve"
      }
    },

    {
        "title": "ファイル圧縮・解凍",
        "date": "2017.3",
        "participants": "1人個人プロジェクト",
        "main": false,
        "subtitle": "ファイル圧縮・解凍できるツール",
        "details": [
        "ファイル圧縮機能実装(BWT ルゴリズム)",
        "圧縮ファイル解凍機能実装(Huffmanコードアルゴリズム)"
        ],
        "url": "",
        "technologies": [
          "C"
        ],
        "readme": true,
        "images": ["./images/project1/cat3.jpg", "./images/project1/cat4.jpg"],
        "videos": [],
        "features": [
          "BWTアルゴリズムを使用するファイル圧縮",
          "Huffmanコードアルゴリズムを使用するファイル解凍"
        ],
       "background": "このプロジェクトは、C言語を使用してファイル圧縮・解凍ツールを開発することを目指しました。BWTアルゴリズムとHuffmanコードアルゴリズムを用いて、効率的に圧縮と解凍を行うことができるツールを作成しました。",
  "meaning": "このプロジェクトでは、圧縮と解凍アルゴリズムの理解を深めるとともに、C言語でのプログラミング技術を向上させることができました。アルゴリズムを適用することで、ツールの効率性を高め、実際のファイル管理に役立つツールを開発しました。",
  "setup_usage": {
          "install_packages": "composer install",
          "run_server": "php artisan serve"
        }
      }
  ]
  